{"ast":null,"code":"var _jsxFileName = \"/Users/sallyhoneybee/Code/100DaysOfCode/Day_4/React/src/App.js\";\nimport logo from \"./assets/investment-calculator-logo.png\";\nimport Form from \"./Components/Form\";\nimport Results from \"./Components/Results\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const submitHandler = event => {\n    event.preventDefault();\n    calculateHandler(inputValue);\n  };\n  const inputChangeHandler = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setInputValue(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const calculateHandler = userInput => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n    const yearlyData = []; // per-year results\n\n    let currentSavings = +userInput[\"currentSavings\"]; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput[\"yearlySavings\"]; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput[\"expectedInterest\"] / 100;\n    const duration = +userInput[\"investmentDuration\"];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n\n    // do something with yearlyData ...\n    console.log(yearlyData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Investment Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Results, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Form","Results","jsxDEV","_jsxDEV","App","submitHandler","event","preventDefault","calculateHandler","inputValue","inputChangeHandler","name","value","target","setInputValue","prevData","userInput","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","console","log","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["/Users/sallyhoneybee/Code/100DaysOfCode/Day_4/React/src/App.js"],"sourcesContent":["import logo from \"./assets/investment-calculator-logo.png\";\nimport Form from \"./Components/Form\";\nimport Results from \"./Components/Results\";\n\nfunction App() {\n  const submitHandler = (event) => {\n    event.preventDefault();\n    calculateHandler(inputValue);\n  };\n\n  const inputChangeHandler = (event) => {\n    const { name, value } = event.target;\n    setInputValue((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const calculateHandler = (userInput) => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n    const yearlyData = []; // per-year results\n\n    let currentSavings = +userInput[\"currentSavings\"]; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput[\"yearlySavings\"]; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput[\"expectedInterest\"] / 100;\n    const duration = +userInput[\"investmentDuration\"];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n\n    // do something with yearlyData ...\n    console.log(yearlyData);\n  };\n\n  return (\n    <div>\n      <header className=\"header\">\n        <img src={logo} alt=\"logo\" />\n        <h1>Investment Calculator</h1>\n      </header>\n\n      <Form onSubmit={submitHandler} />\n\n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n\n      <Results />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,yCAAyC;AAC1D,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,aAAa,GAAIC,KAAK,IAAK;IAC/BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBC,gBAAgB,CAACC,UAAU,CAAC;EAC9B,CAAC;EAED,MAAMC,kBAAkB,GAAIJ,KAAK,IAAK;IACpC,MAAM;MAAEK,IAAI;MAAEC;IAAM,CAAC,GAAGN,KAAK,CAACO,MAAM;IACpCC,aAAa,CAAEC,QAAQ,KAAM;MAC3B,GAAGA,QAAQ;MACX,CAACJ,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMJ,gBAAgB,GAAIQ,SAAS,IAAK;IACtC;IACA;IACA,MAAMC,UAAU,GAAG,EAAE,CAAC,CAAC;;IAEvB,IAAIC,cAAc,GAAG,CAACF,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC;IACnD,MAAMG,kBAAkB,GAAG,CAACH,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC;IACxD,MAAMI,cAAc,GAAG,CAACJ,SAAS,CAAC,kBAAkB,CAAC,GAAG,GAAG;IAC3D,MAAMK,QAAQ,GAAG,CAACL,SAAS,CAAC,oBAAoB,CAAC;;IAEjD;IACA,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGL,cAAc,GAAGE,cAAc;MACtDF,cAAc,IAAIK,cAAc,GAAGJ,kBAAkB;MACrDF,UAAU,CAACO,IAAI,CAAC;QACd;QACAC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAER,cAAc;QAChCC,kBAAkB,EAAEA;MACtB,CAAC,CAAC;IACJ;;IAEA;IACAQ,OAAO,CAACC,GAAG,CAACX,UAAU,CAAC;EACzB,CAAC;EAED,oBACEd,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAQ2B,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACxB1B,OAAA;QAAK4B,GAAG,EAAEhC,IAAK;QAACiC,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7BjC,OAAA;QAAA0B,QAAA,EAAI;MAAqB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eAETjC,OAAA,CAACH,IAAI;MAACqC,QAAQ,EAAEhC;IAAc;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAKjCjC,OAAA,CAACF,OAAO;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV;AAACE,EAAA,GAxDQlC,GAAG;AA0DZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}